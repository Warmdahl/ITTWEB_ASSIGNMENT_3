{"version":3,"sources":["logo.svg","Components/Flash.js","Components/Board.js","Components/Grid.jsx","Components/Game.js","Login/GetId.js","App.js","Login/GetLoginState.js","Components/Login.js","Components/Logout.js","Components/Layout.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Flash","props","state","position","Number","sound","React","Board","rows","columns","history","score","timerToken","onFlash","onScoreChange","bind","this","prevScore","nextScore","setInterval","next","clearInterval","length","_","updateScore","nextFlash","randomInRagne","randomRow","randomColumn","randomSound","push","points","newScore","min","max","Math","floor","random","rs","cs","Component","Grid","highlight","i","j","classNames","className","join","Game","board","currentFlash","running","tryPosition","trySound","speak","stop","prevProps","prevState","snapshot","setrowcol","start","Button","color","disabled","onClick","samePosition","sameSound","newFlash","setState","toString","text","window","utterance","SpeechSynthesisUtterance","voice","speechSynthesis","getVoices","filter","name","GetId","jwt","localStorage","getItem","jwtData","split","decode","atob","JSON","parse","error","console","log","App","ws","WebSocket","gameRunning","gridSize","dataFromServer","setGridSize","onPlay","onPause","onopen","onmessage","evt","message","data","onclose","src","logo","alt","Container","Row","Col","xs","type","value","onInput","onChange","map","input","target","highscore","date","Date","userid","send","stringify","getLoginState","LogIn","user","Loading","username","password","Error","token","handleLogin","handleChange","event","val","preventDefault","userStringified","that","fetch","method","headers","body","then","response","ok","json","setItem","location","reload","alert","status","onSubmit","Logout","clear","Layout","to","path","component","Login","displayName","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","contentType","get","indexOf","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.7ab4d466.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import * as React from 'react'\r\n\r\nexport default class Flash extends React.Component {\r\n    static position = [Number, Number];\r\n    static sound = Number;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {position: [Number, Number], sound: Number};\r\n    }\r\n}","import * as _ from \"lodash\";\r\nimport Flash from \"./Flash\";\r\nimport React from 'react';\r\n\r\nexport default class Board extends React.Component{\r\n\r\n   \r\n\r\n    constructor(rows, columns, props) {\r\n        super(props);\r\n        this.state = { \r\n            history: [],\r\n            score: 0, \r\n            timerToken: 0, \r\n            rows: rows,\r\n            columns: columns,\r\n            onFlash: Flash\r\n\r\n        }\r\n        this.onScoreChange = this.onScoreChange.bind.this;   \r\n    }\r\n\r\n\r\n    onScoreChange (prevScore, nextScore) {}\r\n\r\n    //start the game\r\n    start(onFlash) {\r\n        //this.onFlash = onFlash;\r\n        this.state.onFlash =  onFlash\r\n        \r\n\r\n        this.state.timerToken = setInterval(() =>{\r\n            onFlash(this.next())}, 2500)\r\n    }\r\n\r\n    //stops the game\r\n    stop() {\r\n        clearInterval(this.state.timerToken);\r\n        delete this.state.onFlash;\r\n    }\r\n\r\n    //see if one choose correct\r\n    samePosition() {\r\n        if (this.state.history.length > 1 && _.isEqual(this.state.history[this.state.history.length - 1].position,\r\n             this.state.history[this.state.history.length - 2].position)) {\r\n            this.updateScore(100);\r\n        } else {\r\n            this.updateScore(-50);\r\n        }\r\n    }\r\n\r\n    //see if one choose correct\r\n    sameSound() {\r\n        if (this.state.history.length > 1 && _.isEqual(this.state.history[this.state.history.length - 1].sound,\r\n             this.state.history[this.state.history.length - 2].sound)) {\r\n            this.updateScore(100);\r\n        } else {\r\n            this.updateScore(-50);\r\n        }\r\n    }\r\n\r\n    //choose the next position on the grid\r\n    next() {\r\n        const p = 15;\r\n        const nextFlash = {};\r\n\r\n        if (this.state.history.length > 0 && this.randomInRagne(1, 100) <= p) {\r\n            nextFlash.position = this.state.history[this.state.history.length - 1].position;    \r\n        } else {\r\n            const randomRow = this.randomInRagne(0, this.state.rows - 1);\r\n            const randomColumn = this.randomInRagne(0, this.state.columns - 1);\r\n            nextFlash.position = [randomRow, randomColumn];\r\n        }\r\n\r\n        if (this.state.history.length > 0 && this.randomInRagne(1, 100) <= p) {\r\n            nextFlash.sound = this.state.history[this.state.history.length - 1].sound;\r\n        } else {\r\n            const randomSound = this.randomInRagne(1, 9);\r\n            nextFlash.sound = randomSound;\r\n        }\r\n\r\n        this.state.history.push(nextFlash);\r\n        return nextFlash;\r\n    }\r\n\r\n    //updates the score\r\n    updateScore(points) {\r\n        const newScore = this.state.score + points;\r\n        if (this.onScoreChange) {\r\n            this.onScoreChange(this.state.score, newScore);\r\n        }\r\n        this.state.score = newScore;\r\n    }\r\n\r\n    //chooses a random number between min and max\r\n    randomInRagne(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1) + min);\r\n    }\r\n\r\n    //Update rows and collumns\r\n    setrowcol(rs, cs){\r\n        this.state.rows = rs;\r\n        //this.setState({rows: rs, columns: cs});\r\n        this.state.columns = cs;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport '../CSS/Grid.css';\r\n\r\n\r\nexport default class Grid extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            columns: this.props.columns, \r\n            rows: this.props.rows,\r\n            highlight: this.props.highlight\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const rows = [];\r\n        for(let  i = 0; i < this.props.rows; ++i){\r\n            const columns = [];\r\n            \r\n            for(let j = 0; j < this.props.columns; ++ j){\r\n\r\n                const classNames = ['square', 'square-100'];\r\n                if (this.props.highlight && this.props.highlight[0] === i && this.props.highlight[1] === j) {\r\n                    classNames.push('one');\r\n                }\r\n\r\n                columns.push(\r\n                    <div className={\"grid-cell grid-\" + Math.floor(100 / this.props.columns)} key={j + 1}>\r\n                        <div className={classNames.join(' ')}>{i * this.props.columns + j + 1}</div>\r\n                    </div>\r\n                );\r\n            }\r\n            rows.push(\r\n                <div className=\"grid\" key={i + 1}>\r\n                    {columns}\r\n                </div>\r\n            );\r\n        }\r\n        return( \r\n            <div className=\"grid-container\">\r\n            {rows}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport Board from './Board';\r\nimport Flash from './Flash';\r\nimport Grid from './Grid';\r\n\r\nexport default class Game extends React.Component {\r\n\r\n\r\n    //gets state and return state\r\n    /*static getDerivedStateFromProps(nextProps, prevState) {\r\n        const nextState = {board: prevState.board};\r\n       \r\n\r\n        if (prevState.rows !== nextProps.rows || prevState.columns !== nextProps.columns) {\r\n            prevState.board.stop();\r\n            nextState.board = new Board(nextProps.rows, nextProps.columns)\r\n            nextState.running = false;\r\n        }\r\n\r\n        if (nextProps.onScoreChange) {\r\n            nextState.board.onScoreChange = nextProps.onScoreChange;\r\n        }\r\n\r\n        if (nextProps.running) {\r\n            nextState.running = true;\r\n        }\r\n        prevState.rows = nextProps.rows;\r\n        prevState.columns = nextProps.columns;\r\n        return nextState;\r\n    }*/\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            rows: this.props.rows,\r\n            columns: this.props.columns,\r\n            board: new Board(this.props.rows, this.props.columns),\r\n            onScoreChange: (this.props.prevScore, this.props.nextScore),\r\n            currentFlash: Flash,\r\n            running: this.props.running,\r\n        }\r\n\r\n        this.tryPosition = this.tryPosition.bind(this);\r\n        this.trySound = this.trySound.bind(this);\r\n        this.onFlash = this.onFlash.bind(this);\r\n        this.speak = this.speak.bind(this);\r\n    }\r\n\r\n   \r\n    componentWillUnmount() {\r\n        this.state.board.stop();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot){\r\n        if(!prevProps.running && this.props.running){\r\n            this.state.board.setrowcol(this.props.rows, this.props.columns);\r\n            this.state.board.start(this.onFlash);\r\n            this.state.board.onScoreChange = this.props.onScoreChange;\r\n        }\r\n\r\n        if(prevProps.running && !this.props.running){\r\n            this.state.board.stop();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //const props = {};\r\n        let highlight = []\r\n        const rows = this.props.rows;\r\n        const columns = this.props.columns;\r\n        if(this.state.currentFlash){\r\n            highlight = this.state.currentFlash.position;            \r\n        }\r\n        return (\r\n            <div>\r\n                <Grid rows={rows} columns={columns} highlight = {highlight} />\r\n                <Button color=\"secondary\" disabled={!this.props.running} onClick={this.tryPosition}>Position Match</Button>\r\n                <Button color=\"secondary\" disabled={!this.props.running} onClick={this.trySound}>Sound Match</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    tryPosition() {\r\n        //this.props.onScoreChange(this.prevScore, 100);\r\n        this.state.board.samePosition();\r\n    }\r\n\r\n    trySound() {\r\n        this.state.board.sameSound();\r\n    }\r\n\r\n    onFlash(newFlash) {\r\n        this.setState(this.state.currentFlash = newFlash); \r\n        //this.state.currentFlash = newFlash;\r\n        this.speak(newFlash.sound.toString());\r\n    }\r\n\r\n    speak(text) {\r\n        if('speechSynthesis' in window) {\r\n            const utterance = new SpeechSynthesisUtterance();\r\n            utterance.text = text;\r\n            utterance.voice = speechSynthesis.getVoices().filter((voice) => {return voice.name === \"Allison\"})[0];\r\n            window.speechSynthesis.speak(utterance);\r\n        }\r\n    }\r\n\r\n}","// not used atm\r\n\r\nexport default function GetId() {\r\n    const jwt = localStorage.getItem('jwt'); //Name might change depending on what it is called in localstorage\r\n    let id;\r\n\r\n    try{\r\n        if(jwt) {\r\n            let jwtData = jwt.split('.')[1];\r\n            let decode = window.atob(jwtData);\r\n            let decodedData = JSON.parse(decode);\r\n            id = (decodedData['_id']);\r\n            return id;\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Button, Col, Container, Row} from 'reactstrap';\nimport * as React from 'react';\nimport logo from './logo.svg';\nimport './CSS/App.css';\nimport Game from './Components/Game';\nimport GetId from './Login/GetId';\n\nexport default class App extends React.Component {\n  \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      gameRunning: false,\n      gridSize: 3,\n      score: 0,\n      dataFromServer: [],\n    };\n    \n\n    this.setGridSize = this.setGridSize.bind(this);\n    this.onPlay = this.onPlay.bind(this);\n    this.onPause = this.onPause.bind(this);\n    this.onScoreChange = this.onScoreChange.bind(this);\n  }\n\n  \n  ws = new WebSocket('ws://localhost:8080');\n\n  componentDidMount() {\n    this.ws.onopen = () => {\n    // on connecting, do nothing but log it to the console\n    console.log('connected')\n    }\n\n    this.ws.onmessage = evt => {\n    // listen to data sent from the websocket server\n    const message = JSON.parse(evt.data)  //message is undefined (uncaught syntaxError: Unexpected token : in JSON at position 2)\n    this.setState(this.state.dataFromServer = message)\n    console.log(message)\n    }\n\n    this.ws.onclose = () => {\n    console.log('disconnected')\n    // automatically try to reconnect on connection loss\n\n    }\n  } \n\n  render() {\n    const rows = this.state.gridSize;\n    const columns = this.state.gridSize;\n    const gameRunning = this.state.gameRunning;\n    const dataFromServer = this.state.dataFromServer;\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\">Welcome to Dual N Back</h1>\n        </header>\n        <Container>\n          <Row>\n            <Col xs=\"3\">\n              <input type=\"range\" min=\"3\" max=\"5\" className=\"slider\" value={this.state.gridSize} onInput={this.setGridSize} onChange={this.setGridSize} />\n                <p>Highscore</p>\n                {dataFromServer.map(dataFromServer =>\n                <ol> \n                  <p>{dataFromServer.score}</p>\n                </ol>  )}\n              \n            </Col>\n            <Col xs=\"6\">\n              <Game rows={rows} columns={columns} running={gameRunning} onScoreChange={this.onScoreChange}/>\n            </Col>\n            <Col xs=\"3\">\n              <Row>\n                <Col xs=\"12\">\n                  <Button color=\"primary\" className={this.state.gameRunning ? 'hidden' : ''} onClick={this.onPlay}>Play</Button>\n                  <Button color=\"primary\" className={!this.state.gameRunning ? 'hidden' : ''} onClick={this.onPause}>Stop</Button>\n                </Col>\n              </Row>\n              <Row>\n                <p>{this.state.score}</p>\n              </Row>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n\n  setGridSize(input) {\n    this.setState({gridSize: input.target.value});\n  }\n\n  onPlay(input) {\n    this.setState({gameRunning: true});\n  }\n\n  onPause(input) {\n    this.setState({gameRunning: false});\n    var highscore = {\n      score: this.state.score,\n      date: new Date(),\n      userid: GetId()\n    }\n    //console.log(temp);\n    this.ws.send(JSON.stringify(highscore));\n  }\n\n  onScoreChange(prevScore, nextScore) {\n    this.setState({score: nextScore});\n  }\n\n}\n","export function getLoginState() {\r\n    if(localStorage.getItem(\"jwt\") != null) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}","import * as React from 'react';\r\nimport { getLoginState } from '../Login/GetLoginState';\r\n\r\n\r\n//Inspiration taken from I4PRJ_V2_Gruppe3 (F2020)\r\n//https://github.com/Warmdahl/I4PRJ_V2/blob/master/RCCS/RCCS/ClientApp/src/components/LogIn.js\r\nexport default class LogIn extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: [],\r\n            Loading: true,\r\n            username: null,\r\n            password: null,\r\n            Error: false,\r\n            token: null,\r\n            //UserLoggedIn: false\r\n        }\r\n\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        let name = event.target.name;\r\n        let val = event.target.value;\r\n        this.setState({[name]: val});\r\n    }\r\n\r\n    async handleLogin(event) {\r\n\r\n        event.preventDefault();\r\n\r\n        let user = {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        }\r\n        let userStringified = JSON.stringify(user);\r\n\r\n        const that = this;\r\n        //insert User login API post here pls!\r\n        fetch('http://localhost:8080/users/login', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: userStringified\r\n        }).then(function (response) {\r\n            if(response.ok) {\r\n                response.json().then(function (data) {\r\n                    console.log(\"jwt: \" + data);\r\n                    localStorage.setItem(\"jwt\", data);\r\n                    //that.setState({\r\n                    //    UserLoggedIn: true // not used in this scenario\r\n                    //});\r\n                    window.location.reload(false)\r\n\r\n                })\r\n            } else {\r\n                alert(\"Error in username or password, HTTP error: \" + response.status);\r\n                that.setState({\r\n                    Error: true\r\n                });\r\n            }\r\n        })\r\n        return user;\r\n    }\r\n\r\n    render() {\r\n        const RenderFunc = () => {\r\n            if(getLoginState()) {\r\n                return <h1>You are logged in</h1>\r\n            } else {\r\n                return (\r\n                    <form onSubmit={this.handleLogin}>\r\n                        <label>\r\n                            Username:\r\n                            <input type=\"text\" name='username' value={this.state.username || \"\"}\r\n                                onChange={this.handleChange}/>\r\n                        </label>\r\n                        <label>\r\n                            Password: \r\n                            <input type=\"password\" name='password' value={this.state.password || \"\"}\r\n                                onChange={this.handleChange}/>\r\n                        </label>\r\n                        <input type=\"submit\" value=\"Login\"/>\r\n                    </form>\r\n                );\r\n            }\r\n            //if(UserLoggedIn != false){\r\n            //    <Route path=\"/\"></Route>\r\n            //}\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {RenderFunc()}\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\n\r\nexport default class Logout extends React.Component {\r\n\r\n    componentDidMount() {\r\n        localStorage.clear();\r\n        window.location.reload(false);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>You are logged out</h1>\r\n            </div>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport App from '../App';\r\nimport {getLoginState} from '../Login/GetLoginState';\r\nimport Login from './Login';\r\nimport Logout from './Logout';\r\n\r\nexport default class Layout extends React.Component {\r\n    static displayName = Layout.name;\r\n\r\n    //componentDidMount(){\r\n        //this.setState ({\r\n        //    userLoggedIn: getLoginState()\r\n        //})\r\n    //}\r\n\r\n    render () {\r\n        const RenderFunc = () => {\r\n            if(!getLoginState()){\r\n                return (\r\n                    <div>\r\n                        <h1>Login here!</h1>\r\n                        <ul>\r\n                            <li><Link to=\"/login\">Login</Link></li>\r\n                        </ul>\r\n                        <Route path=\"/Login\" component={Login}></Route>\r\n                    </div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <div>\r\n                        <ul>\r\n                            <li><Link to=\"/Game\">Dual-n-Back</Link></li>\r\n                            <li><Link to=\"/Logout\">Logout</Link></li>\r\n                        </ul>\r\n                        <Route path=\"/Game\" component={App}></Route>\r\n                        <Route path=\"/Logout\" component={Logout}></Route>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {RenderFunc()}\r\n            </div>\r\n        )\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './CSS/index.css';\nimport App from './App';\nimport Layout from './Components/Layout';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<BrowserRouter>\n  <React.StrictMode>\n    <Layout />\n  </React.StrictMode></BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}